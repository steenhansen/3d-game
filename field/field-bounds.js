
// sprite_data.js



// determines the depth of field squares
// let  SQUARE_DEPTH_PERC_BY_DIST
// LET SQUARE_DEPTHS_ON_VANISH_POINT_LINE
// LET  square_depth_perc_by_dist
/*

          BACK_VANISH_POINT  of objects column/enemy/missile
              [511, 256]
------------------/------------------------- MIDDLE OF SCREEN
                 /
                /   [256] 4% of vanish line from back if far away from player 
               /
              /   
         ____/   [128] 58.2% of vanish line from back if middle
            /
           /
          /
     ____/   [0] 100% of vanish line if very close to player
--------X------------------------------------- BOTTOM OF SCREEN


LET VANISH_LINE_PERCENT_BY_DEPTH





*/







// index, start offset, end offset, flip offset
let start_stop_flip = [
     [0, 0, -2, 2],
     [1, 0, -4, 3],
     [2, -4, -10, 4],
     [3, 0, -16, 5],
     [4, -8, -18, 6],
     [5, -4, -16, 7],
     [6, -6, -20, 8],
     [7, 0, -16, 9],
     [8, -10, -28, 10],
     [9, -8, -28, 11],

     [10, -16, -38, 12],
     [11, -16, -40, 13],
     [12, -8, -34, 14],
     [13, -20, -48, 15],
     [14, -28, -58, 16],
     [15, 0, -32, 17],
     [16, -32, -66, 18],
     [17, -28, -64, 19],
     [18, -20, -58, 20],
     [19, -8, -48, 21],

     [20, -34, -76, 22],
     [21, -16, -60, 23],  // 60-16=44
     [22, -40, -86, 24], // 86-40=46
     [23, -16, -64, 25],  // 64-16==48

     //[24, -38, -38, 26],   // went bad

     [24, -38, -88, 26],  //      ==50  OK

     [25, -8, -60, 27],
     [26, -28, -82, 28],
     [27, -48, -104, 29],
     [28, -10, -68, 30],
     [29, -28, -88, 31],

     [30, -46, -108, 32],
     [31, 0, -64, 33],
     //[32, -16, -16, 34],               /// went positive???

     [32, -16, -82, 34],        // OK

     [33, -32, -100, 35],
     [34, -48, -118, 36],
     [35, -64, -136, 37],
     [36, -6, -80, 38],
     [37, -20, -96, 39],
     [38, -34, -112, 40],
     [39, -48, -128, 41],

     [40, -62, -144, 42],
     [41, -76, -160, 43],
     [42, -4, -90, 44],
     [43, -16, -104, 45],
     [44, -28, -118, 46],
     [45, -40, -132, 47],
     [46, -52, -146, 48],
     [47, -64, -160, 49],
     [48, -76, -174, 50],
     [49, -88, -188, 51],

     //  [50, -100, -100, 52],      /// went positive
     [50, -100, -202, 52],      /// went positive OK



     [51, -8, -112, 53],
     [52, -18, -124, 54],
     [53, -28, -136, 55],
     [54, -38, -148, 56],
     [55, -48, -160, 57],
     [56, -58, -172, 58],
     [57, -68, -184, 59],
     [58, -78, -196, 60],
     [59, -88, -208, 61],

     [60, -98, -220, 62],
     [61, -108, -232, 63],
     [62, -118, -244, 64],
     [63, 0, -256, 65],
     [64, -8, -138, 66],
     [65, -16, -148, 67],
     [66, -24, -158, 68],
     [67, -32, -168, 69],
     [68, -40, -178, 70],
     [69, -48, -188, 71],

     [70, -56, -198, 72],
     [71, -64, -208, 73],
     [72, -72, -218, 74],
     [73, -80, -228, 75],
     [74, -88, -238, 76],
     [75, -96, -248, 77],
     [76, -104, -258, 78],
     [77, -112, -268, 79],
     [78, -120, -278, 80],
     [79, -128, -288, 81],

     [80, -136, -298, 82],
     [81, -144, -308, 83],
     [82, -152, -318, 84],
     [83, -160, -328, 85],
     [84, -168, -338, 86],
     [85, -4, -176, 87],
     [86, -10, -184, 88],
     [87, -16, -192, 89],
     [88, -22, -200, 90],
     [89, -28, -208, 91],

     [90, -34, -216, 92],
     [91, -40, -224, 93],
     [92, -46, -232, 94],
     [93, -52, -240, 95],
     [94, -58, -248, 96],
     [95, -64, -256, 97],
     [96, -70, -264, 98],
     [97, -76, -272, 99],
     [98, -82, -280, 100],
     [99, -88, -288, 101],

     [100, -94, -296, 102],
     [101, -100, -304, 103],
     [102, -106, -312, 104],
     [103, -112, -320, 105],
     [104, -118, -328, 106],
     [105, -124, -336, 107],
     [106, -130, -344, 108],
     [107, -136, -352, 109],
     [108, -142, -360, 110],
     [109, -148, -368, 111],

     [110, -154, -376, 112],
     [111, -160, -384, 113],
     [112, -166, -392, 114],
     [113, -172, -400, 115],
     [114, -178, -408, 116],
     [115, -184, -416, 117],
     [116, -190, -424, 118],
     [117, -196, -432, 119],
     [118, -202, -440, 120],
     [119, -208, -448, 121],

     [120, -214, -456, 122],
     [121, -220, -464, 123],
     [122, -226, -472, 124],
     [123, -232, -480, 125],
     [124, -238, -488, 126],
     [125, -244, -496, 127],
     [126, -250, -504, 128],
     [127, 0, -256, 129],
     [128, -4, -262, 130],
     [129, -8, -268, 131],
     // index, start offset, end offset, flip offset

     [130, -12, -274, 132],
     [131, -16, -280, 133],
     [132, -20, -286, 134],
     [133, -24, -292, 135],
     [134, -28, -298, 136],
     [135, -32, -304, 137],
     [136, -36, -310, 138],
     [137, -40, -316, 139],
     [138, -44, -322, 140],
     [139, -48, -328, 141],

     [140, -52, -334, 142],
     [141, -56, -340, 143],
     [142, -60, -346, 144],
     [143, -64, -352, 145],
     [144, -68, -358, 146],
     [145, -72, -364, 147],
     [146, -76, -370, 148],
     [147, -80, -376, 149],
     [148, -84, -382, 150],
     [149, -88, -388, 151],

     [150, -92, -394, 152],
     [151, -96, -400, 153],
     [152, -100, -406, 154],
     [153, -104, -412, 155],
     [154, -108, -418, 156],
     [155, -112, -424, 157],
     [156, -116, -430, 158],
     [157, -120, -436, 159],
     [158, -124, -442, 160],
     [159, -128, -448, 161],

     [160, -132, -454, 162],
     [161, -136, -460, 163],
     [162, -140, -466, 164],
     [163, -144, -472, 165],
     [164, -148, -478, 166],
     [165, -152, -484, 167],
     [166, -156, -490, 168],
     [167, -160, -496, 169],
     [168, -164, -502, 170],
     [169, -168, -508, 171],

     [170, -172, -514, 172],
     [171, -176, -520, 173],
     [172, -180, -526, 174],
     [173, -184, -532, 175],
     [174, -188, -538, 176],
     [175, -192, -544, 177],
     [176, -196, -550, 178],
     [177, -200, -556, 179],
     [178, -204, -562, 180],
     [179, -208, -568, 181],

     [180, -212, -574, 182],
     [181, -216, -580, 183],
     [182, -220, -586, 184],
     [183, -224, -592, 185],
     [184, -228, -598, 186],
     [185, -232, -604, 187],
     [186, -236, -610, 188],
     [187, -240, -616, 189],
     [188, -244, -622, 190],
     [189, -248, -628, 191],

     [190, -252, -634, 192],
     [191, -256, -640, 193],
     [192, -260, -646, 194],
     [193, -264, -652, 195],
     [194, -268, -658, 196],
     [195, -272, -664, 197],
     [196, -276, -670, 198],
     [197, -280, -676, 199],
     [198, -284, -682, 200],
     [199, -288, -688, 201],

     [200, -292, -694, 202],
     [201, -296, -700, 203],
     [202, -300, -706, 204],
     [203, -304, -712, 205],
     [204, -308, -718, 206],
     [205, -312, -724, 207],
     [206, -316, -730, 208],
     [207, -320, -736, 209],
     [208, -324, -742, 210],
     [209, -328, -748, 211],

     [210, -332, -754, 212],
     [211, -336, -760, 213],
     [212, -340, -766, 214],
     [213, -344, -772, 215],
     [214, -348, -778, 216],
     [215, -352, -784, 217],
     [216, -356, -790, 218],
     [217, -360, -796, 219],
     [218, -364, -802, 220],
     [219, -368, -808, 221],

     [220, -372, -814, 222],
     [221, -376, -820, 223],
     [222, -380, -826, 224],
     [223, -384, -832, 225],
     [224, -388, -838, 226],
     [225, -392, -844, 227],
     [226, -396, -850, 228],
     [227, -400, -856, 229],
     [228, -404, -862, 230],
     [229, -408, -868, 231],

     [230, -412, -874, 232],
     [231, -416, -880, 233],
     [232, -420, -886, 234],
     [233, -424, -892, 235],
     [234, -428, -898, 236],
     [235, -432, -904, 237],
     [236, -436, -910, 238],
     [237, -440, -916, 239],
     [238, -444, -922, 240],
     [239, -448, -928, 241],

     [240, -452, -934, 242],
     [241, -456, -940, 243],
     [242, -460, -946, 244],
     [243, -464, -952, 245],
     [244, -468, -958, 246],
     [245, -472, -964, 247],
     [246, -476, -970, 248],
     [247, -480, -976, 249],
     [248, -484, -982, 250],
     [249, -488, -988, 251],

     [250, -492, -994, 252],
     [251, -496, -1000, 253],
     [252, -500, -1006, 254],
     [253, -504, -1012, 255],
     [254, -508, -1018, 256],
     [255, 0, -512, 257],
     // index, max_shift, min_shift, flip offset

]; // every tick
